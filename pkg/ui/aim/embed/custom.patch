diff --git a/aim/web/ui/package.json b/aim/web/ui/package.json
index 8c8b1e9..816e3f1 100644
--- a/aim/web/ui/package.json
+++ b/aim/web/ui/package.json
@@ -53,7 +53,7 @@
   },
   "scripts": {
     "start": "react-app-rewired --max_old_space_size=4096 start",
-    "build": "react-app-rewired --max_old_space_size=4096 build && gzipper c -i js,css,html ./build && node tasks/index-html-template-generator.js",
+    "build": "GENERATE_SOURCEMAP=false react-app-rewired --max_old_space_size=2048 build",
     "test": "react-scripts test ",
     "test:coverage": "react-app-rewired test --collectCoverage",
     "test:watch": "react-app-rewired test --watchAll",
@@ -61,12 +61,12 @@
     "lint": "eslint src/. --ext .js,.jsx,.ts,.tsx",
     "format:fix": "eslint src/. --ext .js,.jsx,.ts,.tsx --quiet --fix",
     "preinstall": "rimraf public/vs",
-    "postinstall": "cp -R node_modules/monaco-editor/min/vs public/vs",
+    "postinstall": "cp -R node_modules/monaco-editor/min/vs public/vs && find public/vs -type f | xargs sed -i -e '/^\\/\\/# sourceMappingURL=/d'",
     "analyze-bundles": "node tasks/bundle-analyzer.js",
     "crc-kit": "func() { node tasks/cli/index.js  create-component --name=\"$1\" --path=./src/components/kit/ --lint; }; func",
     "crc": "func() { node tasks/cli/index.js  create-component --name=\"$1\" --path=./src/components/ --lint; }; func"
   },
-  "homepage": "/static-files/",
+  "homepage": "/aim/static-files/",
   "browserslist": {
     "production": [
       ">0.2%",
diff --git a/aim/web/ui/public/index.html b/aim/web/ui/public/index.html
index 74776c4..88f4df1 100644
--- a/aim/web/ui/public/index.html
+++ b/aim/web/ui/public/index.html
@@ -147,10 +147,6 @@
       rel="stylesheet"
       href="%PUBLIC_URL%/assets/icomoon/icomoonIcons.css"
     />
-    <link
-      rel="stylesheet"
-      href="https://fonts.googleapis.com/icon?family=Material+Icons"
-    />
     <title>Aim</title>
 
     <script>
@@ -214,7 +210,7 @@
       })();
     </script>
     <script>
-      window.API_BASE_PATH = '{{ base_path }}';
+      window.API_BASE_PATH = '/aim';
       window.externalPublicPath = '%PUBLIC_URL%/';
     </script>
   </head>
diff --git a/aim/web/ui/src/components/AutocompleteInput/AutocompleteInput.tsx b/aim/web/ui/src/components/AutocompleteInput/AutocompleteInput.tsx
index fd3115a..113226e 100644
--- a/aim/web/ui/src/components/AutocompleteInput/AutocompleteInput.tsx
+++ b/aim/web/ui/src/components/AutocompleteInput/AutocompleteInput.tsx
@@ -186,7 +186,7 @@ function AutocompleteInput({
           //   : formattedValue;
           onChange(formattedValue, ev);
         }
-        if (ev.changes[0].text === '\n') {
+        if (/^\r?\n$/.test(ev.changes[0].text)) {
           formattedValue = hasSelection
             ? editorValue.replace(/[\n\r]/g, '')
             : formattedValue;
diff --git a/aim/web/ui/src/components/SideBar/SideBar.tsx b/aim/web/ui/src/components/SideBar/SideBar.tsx
index a82cad8..80043c4 100644
--- a/aim/web/ui/src/components/SideBar/SideBar.tsx
+++ b/aim/web/ui/src/components/SideBar/SideBar.tsx
@@ -1,30 +1,39 @@
-import React from 'react';
+import React, { useEffect } from 'react';
 import { NavLink } from 'react-router-dom';
 
 import { Drawer, Tooltip } from '@material-ui/core';
 
 import logoImg from 'assets/logo.svg';
-import { ReactComponent as DiscordIcon } from 'assets/icons/discord.svg';
 
 import { Icon, Text } from 'components/kit';
 import { IconName } from 'components/kit/Icon';
 import ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';
-import CommunityPopup from 'components/CommunityPopup';
 
 import { PathEnum } from 'config/enums/routesEnum';
-import { AIM_VERSION } from 'config/config';
+import { getAPIHost } from 'config/config';
 import { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';
 import { DOCUMENTATIONS } from 'config/references';
 
 import routes, { IRoute } from 'routes/routes';
 
 import { trackEvent } from 'services/analytics';
+import NetworkService from 'services/NetworkService';
 
 import { getItem } from 'utils/storage';
 
 import './Sidebar.scss';
 
 function SideBar(): React.FunctionComponentElement<React.ReactNode> {
+  const [version, setVersion] = React.useState('unknown');
+
+  useEffect(() => {
+    fetch('/version').then((response) => {
+      response.text().then((version) => {
+        setVersion(version);
+      });
+    });
+  }, []);
+
   function getPathFromStorage(route: PathEnum): PathEnum | string {
     const path = getItem(`${route.slice(1)}Url`) ?? '';
     if (path !== '' && path.startsWith(route)) {
@@ -81,21 +90,11 @@ function SideBar(): React.FunctionComponentElement<React.ReactNode> {
             })}
           </ul>
           <div className='Sidebar__bottom'>
-            <CommunityPopup>
-              <Tooltip title='Community Discord' placement='right'>
-                <a
-                  target='_blank'
-                  href='https://community.aimstack.io/'
-                  rel='noreferrer'
-                  className='Sidebar__bottom__anchor'
-                  onClick={() =>
-                    trackEvent(ANALYTICS_EVENT_KEYS.sidebar.discord)
-                  }
-                >
-                  <DiscordIcon />
-                </a>
-              </Tooltip>
-            </CommunityPopup>
+            <Tooltip title='Switch UI' placement='right'>
+              <a href='/' className='Sidebar__bottom__anchor'>
+                <Icon name='live-demo' />
+              </a>
+            </Tooltip>
             <Tooltip title='Docs' placement='right'>
               <a
                 target='_blank'
@@ -107,7 +106,7 @@ function SideBar(): React.FunctionComponentElement<React.ReactNode> {
                 <Icon name='full-docs' />
               </a>
             </Tooltip>
-            <Text tint={30}>v{AIM_VERSION}</Text>
+            <Text tint={30}>{version}</Text>
           </div>
         </Drawer>
       </div>
diff --git a/aim/web/ui/src/config/table/tableConfigs.ts b/aim/web/ui/src/config/table/tableConfigs.ts
index 05cda50..8fe218c 100644
--- a/aim/web/ui/src/config/table/tableConfigs.ts
+++ b/aim/web/ui/src/config/table/tableConfigs.ts
@@ -85,21 +85,6 @@ export const TABLE_DEFAULT_CONFIG: Record<string, any> = {
     },
     height: '0.5',
   },
-  [AppNameEnum.IMAGES]: {
-    resizeMode: ResizeModeEnum.Resizable,
-    rowHeight: RowHeightSize.md,
-    sortFields: [],
-    hiddenMetrics: [],
-    hiddenColumns: ['hash', 'description'],
-    nonHidableColumns: new Set(['#', 'run', 'actions']),
-    columnsWidths: {},
-    columnsOrder: {
-      left: ['run'],
-      middle: [],
-      right: [],
-    },
-    height: '0.5',
-  },
   [AppNameEnum.SCATTERS]: {
     resizeMode: ResizeModeEnum.Resizable,
     rowHeight: RowHeightSize.md,
@@ -128,50 +113,10 @@ export const AVOID_COLUMNS_TO_HIDE_LIST = new Set([
 ]);
 
 export const EXPLORE_SELECTED_RUNS_CONFIG: Record<string, AppNameEnum[]> = {
-  [AppNameEnum.RUNS]: [
-    AppNameEnum.METRICS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  [AppNameEnum.METRICS]: [
-    AppNameEnum.RUNS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  [AppNameEnum.PARAMS]: [
-    AppNameEnum.RUNS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.METRICS,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  [AppNameEnum.SCATTERS]: [
-    AppNameEnum.RUNS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.METRICS,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  [AppNameEnum.IMAGES]: [
-    AppNameEnum.RUNS,
-    AppNameEnum.METRICS,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  dashboard: [
-    AppNameEnum.RUNS,
-    AppNameEnum.METRICS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
-  experiment: [
-    AppNameEnum.RUNS,
-    AppNameEnum.METRICS,
-    AppNameEnum.IMAGES,
-    AppNameEnum.FIGURES,
-    AppNameEnum.AUDIOS,
-  ],
+  [AppNameEnum.RUNS]: [AppNameEnum.METRICS],
+  [AppNameEnum.METRICS]: [AppNameEnum.RUNS],
+  [AppNameEnum.PARAMS]: [AppNameEnum.RUNS, AppNameEnum.METRICS],
+  [AppNameEnum.SCATTERS]: [AppNameEnum.RUNS, AppNameEnum.METRICS],
+  dashboard: [AppNameEnum.RUNS, AppNameEnum.METRICS],
+  experiment: [AppNameEnum.RUNS, AppNameEnum.METRICS],
 };
diff --git a/aim/web/ui/src/pages/Dashboard/Dashboard.tsx b/aim/web/ui/src/pages/Dashboard/Dashboard.tsx
index 1dbda66..6899d40 100644
--- a/aim/web/ui/src/pages/Dashboard/Dashboard.tsx
+++ b/aim/web/ui/src/pages/Dashboard/Dashboard.tsx
@@ -6,7 +6,6 @@ import { Spinner, Text } from 'components/kit';
 
 import ProjectContributions from './components/ProjectContributions/ProjectContributions';
 import ExploreSection from './components/ExploreSection/ExploreSection';
-import DashboardRight from './components/DashboardRight/DashboardRight';
 import DashboardContributionsFeed from './components/DashboardContributionsFeed';
 import ProjectStatistics from './components/ProjectStatistics';
 import useProjectContributions from './components/ProjectContributions/useProjectContributions';
@@ -54,7 +53,6 @@ function Dashboard(): React.FunctionComponentElement<React.ReactNode> {
           )}
           {!isLoading && !totalRunsCount && <AimIntegrations />}
         </div>
-        <DashboardRight />
       </section>
     </ErrorBoundary>
   );
diff --git a/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatistics.tsx b/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatistics.tsx
index b345cdc..35ef65b 100644
--- a/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatistics.tsx
+++ b/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatistics.tsx
@@ -22,61 +22,6 @@ const statisticsInitialMap: Record<string, IProjectStatistic> = {
     iconBgColor: '#7A4CE0',
     navLink: routes.METRICS.path,
   },
-  systemMetrics: {
-    label: 'Sys. metrics',
-    count: 0,
-    icon: 'metrics',
-    iconBgColor: '#AF4EAB',
-    navLink: `${routes.METRICS.path}?select=${encode({
-      advancedQuery: "metric.name.startswith('__system__') == True",
-      advancedMode: true,
-    })}`,
-  },
-  [SequenceTypesEnum.Figures]: {
-    label: 'Figures',
-    icon: 'figures',
-    count: 0,
-    iconBgColor: '#18AB6D',
-    navLink: routes.FIGURES_EXPLORER.path,
-  },
-  [SequenceTypesEnum.Images]: {
-    label: 'Images',
-    icon: 'images',
-    count: 0,
-    iconBgColor: '#F17922',
-    navLink: routes.IMAGE_EXPLORE.path,
-  },
-  [SequenceTypesEnum.Audios]: {
-    label: 'Audios',
-    icon: 'audios',
-    count: 0,
-    iconBgColor: '#FCB500',
-    navLink: routes.AUDIOS_EXPLORER.path,
-    badge: {
-      value: 'New',
-      style: { backgroundColor: '#1473e6', color: '#fff' },
-    },
-  },
-  [SequenceTypesEnum.Texts]: {
-    label: 'Texts',
-    icon: 'text',
-    count: 0,
-    iconBgColor: '#E149A0',
-    navLink: '',
-    badge: {
-      value: 'Explorer coming soon',
-    },
-  },
-  [SequenceTypesEnum.Distributions]: {
-    label: 'Distributions',
-    icon: 'distributions',
-    count: 0,
-    iconBgColor: '#0394B4',
-    navLink: '',
-    badge: {
-      value: 'Explorer coming soon',
-    },
-  },
 };
 
 const runsCountingInitialMap: Record<'archived' | 'runs', IProjectStatistic> = {
diff --git a/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatisticsStore.ts b/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatisticsStore.ts
index a9cca3a..effffcc 100644
--- a/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatisticsStore.ts
+++ b/aim/web/ui/src/pages/Dashboard/components/ProjectStatistics/ProjectStatisticsStore.ts
@@ -6,14 +6,7 @@ import { SequenceTypesEnum } from 'types/core/enums';
 function projectStatisticsEngine() {
   const { fetchData, state, destroy } = createResource<GetParamsResult>(() =>
     getParams({
-      sequence: [
-        SequenceTypesEnum.Metric,
-        SequenceTypesEnum.Images,
-        SequenceTypesEnum.Figures,
-        SequenceTypesEnum.Texts,
-        SequenceTypesEnum.Audios,
-        SequenceTypesEnum.Distributions,
-      ],
+      sequence: [SequenceTypesEnum.Metric],
       exclude_params: true,
     }),
   );
diff --git a/aim/web/ui/src/pages/Experiment/Experiment.tsx b/aim/web/ui/src/pages/Experiment/Experiment.tsx
index 9c9fb38..fb0de77 100644
--- a/aim/web/ui/src/pages/Experiment/Experiment.tsx
+++ b/aim/web/ui/src/pages/Experiment/Experiment.tsx
@@ -43,13 +43,6 @@ const ExperimentRunsTab = React.lazy(
     ),
 );
 
-const ExperimentNotesTab = React.lazy(
-  () =>
-    import(
-      /* webpackChunkName: "ExperimentOverviewTab" */ './components/ExperimentNotesTab'
-    ),
-);
-
 const ExperimentSettingsTab = React.lazy(
   () =>
     import(
@@ -60,7 +53,6 @@ const ExperimentSettingsTab = React.lazy(
 const tabs: Record<string, string> = {
   overview: 'Overview',
   runs: 'Runs',
-  notes: 'Notes',
   settings: 'Settings',
 };
 
@@ -104,12 +96,6 @@ function Experiment(): React.FunctionComponentElement<React.ReactNode> {
       },
       Component: ExperimentRunsTab,
     },
-    notes: {
-      props: {
-        experimentId,
-      },
-      Component: ExperimentNotesTab,
-    },
     settings: {
       props: {
         experimentName: experimentData?.name ?? '',
diff --git a/aim/web/ui/src/pages/RunDetail/RunDetail.tsx b/aim/web/ui/src/pages/RunDetail/RunDetail.tsx
index b0d58c3..1dfa112 100644
--- a/aim/web/ui/src/pages/RunDetail/RunDetail.tsx
+++ b/aim/web/ui/src/pages/RunDetail/RunDetail.tsx
@@ -1,5 +1,4 @@
 import React from 'react';
-import _ from 'lodash-es';
 import classNames from 'classnames';
 import moment from 'moment';
 import {
@@ -39,11 +38,6 @@ import RunSelectPopoverContent from './RunSelectPopoverContent';
 
 import './RunDetail.scss';
 
-const RunDetailNotesTab = React.lazy(
-  () =>
-    import(/* webpackChunkName: "RunDetailNotesTab" */ './RunDetailNotesTab'),
-);
-
 const RunDetailParamsTab = React.lazy(
   () =>
     import(/* webpackChunkName: "RunDetailParamsTab" */ './RunDetailParamsTab'),
@@ -60,35 +54,14 @@ const RunDetailMetricsAndSystemTab = React.lazy(
       /* webpackChunkName: "RunDetailMetricsAndSystemTab" */ './RunDetailMetricsAndSystemTab'
     ),
 );
-const TraceVisualizationContainer = React.lazy(
-  () =>
-    import(
-      /* webpackChunkName: "TraceVisualizationContainer" */ './TraceVisualizationContainer'
-    ),
-);
 const RunOverviewTab = React.lazy(
   () => import(/* webpackChunkName: "RunOverviewTab" */ './RunOverviewTab'),
 );
-const RunLogsTab = React.lazy(
-  () => import(/* webpackChunkName: "RunLogsTab" */ './RunLogsTab'),
-);
-const RunLogRecords = React.lazy(
-  () => import(/* webpackChunkName: "RunLogRecords" */ './RunLogRecords'),
-);
 
 const tabs: Record<string, string> = {
   overview: 'Overview',
   run_parameters: 'Run Params',
-  notes: 'Notes',
-  logs: 'Logs',
-  messages: 'Messages',
   metrics: 'Metrics',
-  system: 'System',
-  distributions: 'Distributions',
-  images: 'Images',
-  audios: 'Audios',
-  texts: 'Texts',
-  figures: 'Figures',
   settings: 'Settings',
 };
 
@@ -132,21 +105,6 @@ function RunDetail(): React.FunctionComponentElement<React.ReactNode> {
         isRunInfoLoading={runData?.isRunInfoLoading}
       />
     ),
-    logs: (
-      <RunLogsTab
-        runHash={runHash}
-        runLogs={runData?.runLogs}
-        inProgress={_.isNil(runData?.runInfo?.end_time)}
-        updatedLogsCount={runData?.updatedLogsCount}
-        isRunLogsLoading={runData?.isRunLogsLoading}
-      />
-    ),
-    messages: (
-      <RunLogRecords
-        runHash={runHash}
-        inProgress={_.isNil(runData?.runInfo?.end_time)}
-      />
-    ),
     metrics: (
       <RunDetailMetricsAndSystemTab
         runHash={runHash}
@@ -155,52 +113,6 @@ function RunDetail(): React.FunctionComponentElement<React.ReactNode> {
         isRunBatchLoading={runData?.isRunBatchLoading}
       />
     ),
-    system: (
-      <RunDetailMetricsAndSystemTab
-        runHash={runHash}
-        runTraces={runData?.runTraces}
-        runBatch={runData?.runSystemBatch}
-        isSystem
-        isRunBatchLoading={runData?.isRunBatchLoading}
-      />
-    ),
-    distributions: (
-      <TraceVisualizationContainer
-        runHash={runHash}
-        traceType='distributions'
-        traceInfo={runData?.runTraces}
-      />
-    ),
-    images: (
-      <TraceVisualizationContainer
-        runHash={runHash}
-        traceType='images'
-        traceInfo={runData?.runTraces}
-        runParams={runData?.runParams}
-      />
-    ),
-    audios: (
-      <TraceVisualizationContainer
-        runHash={runHash}
-        traceType='audios'
-        traceInfo={runData?.runTraces}
-        runParams={runData?.runParams}
-      />
-    ),
-    texts: (
-      <TraceVisualizationContainer
-        runHash={runHash}
-        traceType='texts'
-        traceInfo={runData?.runTraces}
-      />
-    ),
-    figures: (
-      <TraceVisualizationContainer
-        runHash={runHash}
-        traceType='figures'
-        traceInfo={runData?.runTraces}
-      />
-    ),
     settings: (
       <RunDetailSettingsTab
         isArchived={runData?.runInfo?.archived}
@@ -209,7 +121,6 @@ function RunDetail(): React.FunctionComponentElement<React.ReactNode> {
         runHash={runHash}
       />
     ),
-    notes: <RunDetailNotesTab runHash={runHash} />,
   };
 
   function getRunsOfExperiment(
diff --git a/aim/web/ui/src/pages/RunDetail/RunOverviewTab/components/RunOverviewSidebar/RunOverviewSidebar.tsx b/aim/web/ui/src/pages/RunDetail/RunOverviewTab/components/RunOverviewSidebar/RunOverviewSidebar.tsx
index b17f9cb..0cbd65b 100644
--- a/aim/web/ui/src/pages/RunDetail/RunOverviewTab/components/RunOverviewSidebar/RunOverviewSidebar.tsx
+++ b/aim/web/ui/src/pages/RunDetail/RunOverviewTab/components/RunOverviewSidebar/RunOverviewSidebar.tsx
@@ -54,46 +54,11 @@ function RunOverviewSidebar({
     const systemMetricsLength: number =
       traces.metric.filter((m) => m.name.startsWith('__system__')).length || 0;
     return [
-      {
-        name: 'Notes',
-        path: `${path}/notes`,
-        value: info.notes || 0,
-      },
       {
         name: 'Metrics',
         path: `${path}/metrics`,
         value: traces?.metric?.length - systemMetricsLength || 0,
       },
-      {
-        name: 'System',
-        path: `${path}/system`,
-        value: systemMetricsLength,
-      },
-      {
-        name: 'Distributions',
-        path: `${path}/distributions`,
-        value: traces?.distributions?.length || 0,
-      },
-      {
-        name: 'Images',
-        path: `${path}/images`,
-        value: traces?.images?.length || 0,
-      },
-      {
-        name: 'Audios',
-        path: `${path}/audios`,
-        value: traces?.audios?.length || 0,
-      },
-      {
-        name: 'Texts',
-        path: `${path}/texts`,
-        value: traces?.texts?.length || 0,
-      },
-      {
-        name: 'Figures',
-        path: `${path}/figures`,
-        value: traces?.figures?.length || 0,
-      },
     ];
     // eslint-disable-next-line react-hooks/exhaustive-deps
   }, [traces]);
diff --git a/aim/web/ui/src/routes/routes.tsx b/aim/web/ui/src/routes/routes.tsx
index 0fc79c5..867376b 100644
--- a/aim/web/ui/src/routes/routes.tsx
+++ b/aim/web/ui/src/routes/routes.tsx
@@ -118,7 +118,7 @@ const routes = {
   IMAGE_EXPLORE: {
     path: PathEnum.Images_Explore,
     component: ImagesExplore,
-    showInSidebar: true,
+    showInSidebar: false,
     displayName: 'Images',
     icon: 'images',
     isExact: true,
@@ -135,7 +135,7 @@ const routes = {
   FIGURES_EXPLORER: {
     path: PathEnum.Figures_Explorer,
     component: FiguresExplore,
-    showInSidebar: true,
+    showInSidebar: false,
     icon: 'figures',
     displayName: 'Figures',
     isExact: true,
@@ -144,7 +144,7 @@ const routes = {
   AUDIOS_EXPLORER: {
     path: PathEnum.Audios_Explorer,
     component: AudiosExplorer,
-    showInSidebar: true,
+    showInSidebar: false,
     icon: 'audios',
     displayName: 'Audios',
     isExact: true,
diff --git a/aim/web/ui/src/utils/formatValue.ts b/aim/web/ui/src/utils/formatValue.ts
index f328daf..3785841 100644
--- a/aim/web/ui/src/utils/formatValue.ts
+++ b/aim/web/ui/src/utils/formatValue.ts
@@ -85,5 +85,5 @@ export function formatValue(
   undefinedValue: string = UNDEFINED_VALUE,
 ): string {
   let formatter = FORMATTERS[typeof value];
-  return formatter(value, undefinedValue);
+  return JSON.stringify(JSON.parse(formatter(value, undefinedValue)), null, 2);
 }

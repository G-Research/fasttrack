name: Release

on:
  workflow_run:
    types: [completed]
    workflows: [CI]
    branches:
      - main
      - v*

jobs:
  release:
    name: Publish container image to DockerHub
    runs-on: ubuntu-latest
    environment: release
    if: github.event.workflow_run.event == 'push' && github.event.workflow_run.conclusion == 'success' # && !github.event.repository.fork
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # The given ref should belong to the main branch.
      # If it's main, it shouldn't be more than 2 commits away (in case another push happened in the meantime).
      # If it starts with 'v', it should be a tag and belong to the main branch.
      # Anything else is invalid.
      - name: Validate ref
        run: |
          ref=${{ github.event.workflow_run.head_branch }}
          sha=${{ github.event.workflow_run.head_sha }}
          case $ref in
            main)
              [ $(git branch --contains=$sha main | wc -l) -eq 1 ] &&
              [ $(git rev-list --count $sha..main) -le 2 ]
              ;;
            v?*)
              [ $(git rev-parse refs/tags/$ref) == $sha ] &&
              [ $(git branch --contains=$sha main | wc -l) -eq 1 ]
              ;;
            *)
              false
              ;;
          esac
          if [ $? -ne 0 ]; then
            echo "::error ::Invalid ref $ref $sha"
            exit 1
          fi

      - name: Compute tags
        id: tags
        run: |
          ref=${{ github.event.workflow_run.head_branch }}
          case $ref in
            main)
              tags=("main" "edge")
              ;;
            v*)
              tags=("${ref#v}")
              if [ $(git describe --tags --abbrev=0) == $ref ]; then
                tags+=("latest")
              fi
          esac
          echo "tags=${tags[@]}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: v1.19.1
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

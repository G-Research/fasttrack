name: Release

on:
  workflow_run:
    types: [completed]
    workflows: [CI]
    branches:
      - main
      - v*

jobs:
  release:
    name: Publish container image to DockerHub
    runs-on: ubuntu-latest
    environment: release
    if: github.event.workflow_run.event == 'push' && github.event.workflow_run.conclusion == 'success' # && !github.event.repository.fork
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # The given ref should belong to the main branch.
      # If it's main, it shouldn't be more than 2 commits away (in case another push happened in the meantime).
      # If it starts with 'v', it should be a tag and belong to the main branch.
      # Anything else is invalid.
      - name: Validate ref
        run: |
          ref=${{ github.event.workflow_run.head_branch }}
          sha=${{ github.event.workflow_run.head_sha }}
          case $ref in
            main)
              [ $(git branch --contains=$sha main | wc -l) -eq 1 ] &&
              [ $(git rev-list --count $sha..main) -le 2 ]
              ;;
            v?*)
              [ $(git rev-parse refs/tags/$ref) == $sha ] &&
              [ $(git branch --contains=$sha main | wc -l) -eq 1 ]
              ;;
            *)
              false
              ;;
          esac
          if [ $? -ne 0 ]; then
            echo "::error ::Invalid ref $ref $sha"
            exit 1
          fi

      - name: Compute tags
        id: tags
        run: |
          ref=${{ github.event.workflow_run.head_branch }}
          case $ref in
            main)
              tags=("main" "edge")
              ;;
            v*)
              tags=("${ref#v}")
              if [ $(git describe --tags --abbrev=0) == $ref ]; then
                tags+=("latest")
              fi
          esac
          echo "tags=${tags[@]}" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "fasttrackml-oci-image"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/fasttrackml-oci-image.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip fasttrackml-oci-image.zip

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          for tag in ${{ steps.tags.outputs.tags }}
          do
            echo "::group::Pushing image to ${{ vars.DOCKER_REPO }}:$tag"
            skopeo copy --all oci-archive:fasttrackml-oci.tar:${{ github.event.workflow_run.head_branch }} docker://${{ vars.DOCKER_REPO }}:$tag
            echo "::endgroup::"
          done
